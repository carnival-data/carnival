/**
 * Carnival Gradle Plugin
 *
 */

///////////////////////////////////////////////////////////////////////////////
// Publish to the Gradle plugin repository
// The Maven and Gradle publish plugins clash. To publish to the Gradle plugin
// repository, uncomment this block and comment the Maven block.
///////////////////////////////////////////////////////////////////////////////

/*
plugins {
    id 'java-gradle-plugin'                           
    id 'com.gradle.plugin-publish' version '1.1.0'   
}

pluginBundle {
    website = 'https://carnival-data.github.io/carnival/' 
    vcsUrl = 'https://github.com/carnival-data/carnival/' 
    tags = ['carnival', 'graph', 'data']     
}

gradlePlugin {
    plugins { 
        greetingsPlugin { 
            id = 'io.github.carnival-data.carnival' 
            displayName = 'Carnival' 
            description = 'The Carnival plugin adds the necessary dependencies for an application that relies on Carnival' 
            implementationClass = 'carnival.gradle.CarnivalLibraryPlugin'
        }
    }
}
*/



///////////////////////////////////////////////////////////////////////////////
// properties file
///////////////////////////////////////////////////////////////////////////////

// added so that Gradle publishing works
tasks.withType(Copy) {
    duplicatesStrategy 'WARN'
}

task writePropertiesFile(type: WriteProperties) {
    outputFile = file('src/main/resources/carnival/gradle/Version.properties')
    property 'groovyVersion', groovyVersion
    property 'gremlinVersion', gremlinVersion
    property 'neo4jTinkerpopVersion', neo4jTinkerpopVersion
    property 'neo4JavaDriverVersion', neo4JavaDriverVersion
    property 'carnivalVersion', version
}
compileGroovy.dependsOn 'writePropertiesFile'
processResources.dependsOn 'writePropertiesFile'


///////////////////////////////////////////////////////////////////////////////
// maven publishing
// The Maven and Gradle publish plugins clash. To publish to the Maven central
// repository, uncomment this block and comment the Gradle block.
///////////////////////////////////////////////////////////////////////////////
publishToMavenLocal.dependsOn 'compileGroovy'

publishing {
    publications {
        mavenGroovy(MavenPublication) {
            artifactId = 'carnival-gradle'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Carnival Gradle Plugin'
                    description 'A Gradle plugin to facilitate creation of a Carnival libraries and applications.'
                    url 'https://github.com/carnival-data/carnival'
                    licenses {
                        license {
                            name 'GNU GENERAL PUBLIC LICENSE, Version 3, 29 June 2007'
                            url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }
                    developers {
						developer {
                            id 'augustearth'
                            name 'David Birtwell'
                            email 'augustearth@gmail.com'
                        }
                    }
                    scm {
                        connection 'scm:git:git://github.com:carnival-data/carnival.git'
                        developerConnection 'scm:git:ssh://github.com:carnival-data/carnival.git'
                        url 'https://github.com/carnival-data/carnival'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenGroovy
}



///////////////////////////////////////////////////////////////////////////////
// dependencies
///////////////////////////////////////////////////////////////////////////////

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation gradleApi()
    implementation localGroovy()
}


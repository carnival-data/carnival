/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'augustearth' at '8/2/16 1:15 PM' with Gradle 2.9
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_groovy_projects.html
 */

// Apply the groovy plugin to add support for Groovy
//apply plugin: 'java'
plugins {
    id 'java'
    id 'maven-publish'
}

// In this section you declare where to find the dependencies of your project
repositories {
    /*maven {
        url "https://maven.oracle.com/"
    }*/    

    // central repository, used for the math dependencies
    // @see http://central.sonatype.org/
    maven { url "https://repo1.maven.org/maven2" }
    maven { url "https://jitpack.io" }
    maven { url "http://download.java.net/maven/2/" }

    //https://mvnrepository.com/
    maven { url "http://central.maven.org/maven2"}

    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    mavenLocal()

	flatDir(dir: 'libs', name: 'Local libs')    
}


configurations {
    apt
}



///////////////////////////////////////////////////////////////////////////////
// maven publishing
///////////////////////////////////////////////////////////////////////////////

publishToMavenLocal.dependsOn 'compileJava'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'carnival-gremlin-dsl'
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Carnival Gremlin DSL'
                    description 'A concise description of Carnival Gremlin DSL'
                    url 'https://pennbiobank.github.io/carnival/'
                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'hjwilli'
                            name 'Heather Williams'
                            email 'hjwilli@gmail.com'
                        }
						developer {
                            id 'augustearth'
                            name 'David Birtwell'
                            email 'augustearth@gmail.com'
                        }
                    }
                    scm {
                        connection 'scm:git:git://github.com:pennbiobank/carnival.git'
                        developerConnection 'scm:git:ssh://github.com:pennbiobank/carnival.git'
                        url 'https://github.com/pennbiobank/carnival'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}




// In this section you declare the dependencies for your production and test code
dependencies {
    // Tinkerpop
    compile 'org.apache.tinkerpop:gremlin-core:3.4.3'
    compile 'org.apache.tinkerpop:gremlin-groovy:3.4.3'
    compile 'org.apache.tinkerpop:tinkergraph-gremlin:3.4.3'

    // apt
    apt 'org.apache.tinkerpop:gremlin-core:3.4.3'

    // Neo4J
    compile 'org.apache.tinkerpop:neo4j-gremlin:3.4.3'
    compile 'org.neo4j:neo4j-tinkerpop-api-impl:0.9-3.4.0'
}


compileJava {
    options.annotationProcessorPath = configurations.apt
}


///////////////////////////////////////////////////////////////////////////////
// TASKS
///////////////////////////////////////////////////////////////////////////////

task installCarnival(type: Copy, dependsOn: 'build') {
    from "build/libs/carnival-gremlin-dsl-${version}.jar"
    into '../carnival-core/libs/'
}

task installUsrLocal(type: Copy, dependsOn: 'build') {
    from 'build/libs/carnival-gremlin-dsl.jar'
    into '/usr/local/opt/gremlin-console/lib/'
}

task installAll(dependsOn: ['installCarnival', 'installUsrLocal'])

task copyJar(type: Copy) {
    from 'build/libs/carnival-gremlin-dsl.jar'
    into '../carnival-core/libs/'
}





